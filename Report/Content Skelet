1. Introduction
  1.1 Problem ( explain the problem we are solving the fact it's a proof of concept, hasn't been done before and what are the opportunities it opens )
  1.2 Genetic Programming ( what is genetic programming how it works where it's used, how are we using it )
  1.3 Requirements ( talk about the initial Requirements and how were they altered )
  1.4 Organization ( Project meetings - how often, what was useful about them, monitoring work from meeting to meeting through minutes, Agile Development and user stories, tools used for the process )
	1.4.1 Meetings and Minutes
		-Team meetings
		-Minutes
	1.4.2 Agile Development
		- images of pivotal tracker and git and explanation how were they used
	1.4.2 Sprints and Goals
		-Include gantt charts
		-Iteration over requirements over time
2. Design
	2.1 Multiple Technologies
		2.1.1 Options between Technologies
		2.1.2 Chosen Components
	2.2 Architecture ( show the architecture of the system it's components how are they working )
		2.2.1 overall design
			-Architecture Design ( the high level view of the project)
		2.2.2 combining components
			-Implementation Design ( lower level design of the projects with functionalities explained
		2.2.3 client
			-Client ( design of the client )
		2.2.4 web services and evaluator
			- Design of the services and how were they modified after that
		
	2.3 GUI Design
		2.3.1 Design Principles used for the GUI
		2.3.2 Purpose of the GUI
		2.3.3 XML configuration
			- example XML file for configuration
		2.3.4 Iterations and Final Design
			- example designs
			- final design
			- 
2. Implementation
	2.1 Technologies Used ( Explain which Technologies have been used and how )
		2.1.1 DEAP 
		2.1.2 CherryPy
		2.1.3 Inspect
		2.1.4 Requests
		2.1.5 wxPython
		2.1.6 wxDesigner  
	2.2 Implementation
		2.2.1 DEAP set up
		2.2.2 Generation of individuals
		2.2.3 Evaluation over a network
		2.2.4 Code Generation
		2.2.5 GUI
3. Evaluation
	  3.1 Unit Testing ( explain why we are using unit tests, where and what do they help us with
		-show unit tests and what part of the system they cover
	  3.2 System Testing ( what is the strategy behind the system testing what are the conclusion
		-show the system test used to inspect the system
	  3.3 UI and Usability Testing ( how do other people operate with the tool and if they find UI confusing explain iterations and improvements done.
		-Design Iterations
		-type of evaluation
		- the evaluation itself
		-Conclusions
4. Problems encountered & Future development
	4.1 Problems
		4.1.1 multiple technologies ( multiple technologies used and the need to get familiar with them, many more considered and researched )
		4.1.2 lack of sources ( Frequent questions to stackoverflow.com or contacting with the frameworks developers
	4.2 Future Development
		4.2.1 make framework more versatile ( include additional functionality for 
		4.2.1 improving cloned service ( improve speed / remove bugs from the cloned service )
		4.2.2 Unit Tests as Fitness Function ( use unit tests to guide the evolution
		4.2.3 Dynamic addition to Unit Tests ( alter the course of evolution by dynamically adding and removing unit tests )
  
  